# Generated by Django 5.2.1 on 2025-06-01 14:38

import django.db.models.deletion
import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Blog Category',
                'verbose_name_plural': 'Blog Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=10)),
                ('is_featured', models.BooleanField(default=False, help_text='Feature this post on the homepage')),
                ('published_at', models.DateTimeField(blank=True, help_text='Date/time when this post goes live', null=True)),
                ('content', tinymce.models.HTMLField(verbose_name='Content')),
                ('featured_image', models.ImageField(blank=True, help_text='Main image for the post', null=True, upload_to='blog/images/')),
                ('external_image_url', models.URLField(blank=True, help_text='External URL for post image (use instead of uploading)', max_length=500, null=True)),
                ('youtube_url', models.URLField(blank=True, help_text='YouTube embed URL')),
                ('thumbnail', models.ImageField(blank=True, help_text='Small image for listings (falls back to main image if not provided)', null=True, upload_to='blog/thumbnails/')),
                ('attachment', models.FileField(blank=True, help_text='Optional file for users to download', null=True, upload_to='blog/attachments/')),
                ('ad_type', models.CharField(choices=[('none', 'No Advertisement'), ('adsense', 'Google AdSense'), ('banner', 'Banner Image')], default='none', max_length=10)),
                ('ad_code', models.TextField(blank=True, help_text='HTML/JavaScript ad code (for AdSense)')),
                ('ad_image', models.ImageField(blank=True, help_text='Banner image for advertisement', null=True, upload_to='blog/ads/')),
                ('ad_url', models.URLField(blank=True, help_text='URL for ad banner to link to')),
                ('meta_title', models.CharField(blank=True, help_text='SEO Title (60 characters max)', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='SEO Description (160 characters max)', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-separated keywords', max_length=255)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='posts', to='blog.blogcategory')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
    ]
